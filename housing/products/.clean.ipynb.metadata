{"timestamp": 1667618013.524017, "stored_source_code": "# Add description here\n#\n# *Note:* You can open this file as a notebook (JupyterLab: right-click on it in the side bar -> Open With -> Notebook)\n# Uncomment the next two lines to enable auto reloading for imported modules\n# %load_ext autoreload\n# %autoreload 2\n# For more info, see:\n# https://docs.ploomber.io/en/latest/user-guide/faq_index.html#auto-reloading-code-in-jupyter\n# If this task has dependencies, list them them here\n# (e.g. upstream = ['some_task']), otherwise leave as None.\nupstream = ['get']\n\n# This is a placeholder, leave it as None\nproduct = None\n#import some necessary librairies\n\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n\npd.set_option('display.float_format', lambda x: '{:.3f}'.format(x)) #Limiting floats output to 3 decimal points\n\ndf = pd.read_csv(upstream['get']['data'])\n\n#Converting Price value into float datatype\ndef clean_currency(x):\n    \"\"\" If the value is a string, then remove currency symbol and delimiters\n    otherwise, the value is numeric and can be converted\n    \"\"\"\n    if isinstance(x, str):\n        return(x.replace('$', '').replace(',', ''))\n    return(x)\n\ndf['Price'] = df['Price'].apply(clean_currency).astype('float')\n\n#Converting Beds value into float datatype\ndef clean_currency(x):\n    \"\"\" If the value is a string, then remove currency symbol and delimiters\n    otherwise, the value is numeric and can be converted\n    \"\"\"\n    if isinstance(x, str):\n        return(x.replace('bed', '').replace(',', ''))\n    return(x)\n\ndf['Beds'] = df['Beds'].apply(clean_currency).astype('float')\n\n#Converting Baths value into float datatype\ndef clean_currency(x):\n    \"\"\" If the value is a string, then remove currency symbol and delimiters\n    otherwise, the value is numeric and can be converted\n    \"\"\"\n    if isinstance(x, str):\n        return(x.replace('bath', '').replace(',', ''))\n    return(x)\n\ndf['Baths'] = df['Baths'].apply(clean_currency).astype('float')\n\n#Converting Sqft value into float datatype\ndef clean_currency(x):\n    \"\"\" If the value is a string, then remove currency symbol and delimiters\n    otherwise, the value is numeric and can be converted\n    \"\"\"\n    if isinstance(x, str):\n        return(x.replace('sqft', '').replace(',', ''))\n    return(x)\n\ndf['Sqft'] = df['Sqft'].apply(clean_currency).astype('float')\n\ndf.to_csv(product['data'], index=False)\ndf.to_csv(product['data'], index=False)\n", "params": {}}